{"ownername":"plotdb","key":1025,"name":"Scatter Plot","owner":4,"theme":null,"parent":null,"description":"a standard scatter plot. can be used to visualize two data dimension and show their correlation.","basetype":["18"],"visualencoding":["1","6"],"category":["1","4","5"],"tags":["correlation","distribution","basic"],"likes":2,"searchable":true,"dimlen":5,"createdtime":"2016-03-07T08:11:54.000Z","modifiedtime":"2017-01-31T04:53:30.000Z","doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":62,"type":"css","lines":5,"content":".domain {\n  fill: none;\n  stroke: #000;\n  storke-width: 1px;\n}"},"code":{"name":"code","size":14441,"type":"javascript","lines":329,"content":"{\n  sample: function() {\n    var count = 90 + Math.round(Math.random() * 200);\n    var x = [{name: \"X\", data: d3.range(count).map(function() { return Math.random(); })}];\n    var y = [{name: \"Y\", data: d3.range(count).map(function(d,i) { return Math.random() + x[0].data[i] * 0.2; })}];\n    var radius = [{name: \"Radius\", data: d3.range(count).map(function() { return Math.random(); })}];\n    var color = [{name: \"Color\", data: d3.range(count).map(function() { return plotdb.data.sample.category.rand(); })}];\n    var name = [{name: \"Name\", data: d3.range(count).map(function() { return plotdb.data.sample.name.rand(); })}];\n    return {x: x, y: y, radius: radius, color: color, name: name};\n  },\n  dimension: {\n    radius: { type: [plotdb.Number], require: true, desc: \"radius of circle\" },\n    x: { type: [plotdb.Number], require: true, desc: \"x axis of circle\"},\n    y: { type: [plotdb.Number], require: true, desc: \"y axis of circle\"},\n    color: { type: [], require: false, desc: \"color of circle\"},\n    name: { type: [], require: false, desc: \"name of circle\"}\n  },\n  config: { \n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    padding: {},\n    palette: {},\n    labelShow: {},\n    labelShowOverflow: {},\n    legendShow: {},\n    legendLabel: {},\n    bubbleStroke: {},\n    bubbleStrokeWidth: {},\n    bubbleSizeMax: {},\n    bubbleFillOpacity: {},\n    gridBackground: {},\n    gridStroke: {},\n    gridStrokeWidth: {},\n    gridShow: {},\n    gridDashArray: {},\n    gridFrameStroke: {},\n    gridFrameStrokeWidth: {},\n    yAxisShow: {},\n    yAxisLabel: {},\n    yAxisTickSizeInner: {},\n    yAxisTickSizeOuter: {},\n    yAxisTickPadding: {},\n    yAxisTickCount: {},\n    yAxisLabelPosition: {},\n    yAxisHandleOverlap: {},\n    yAxisStroke: {},\n    xAxisShow: {},\n    xAxisLabel: {},\n    xAxisTickSizeInner: {},\n    xAxisTickSizeOuter: {},\n    xAxisTickPadding: {},\n    xAxisTickCount: {},\n    xAxisStroke: {},\n    xAxisLabelPosition: {},\n    xAxisHandleOverlap: {},\n    xAxisTickDirection: {},\n    popupShow: {},\n    unit: {},\n    lineStroke: {},\n    lineStrokeWidth: {},\n    lineDashArray: {},\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.frame = this.svg.append(\"rect\").attr({class: \"grid frame\"});\n    this.frameInner = this.svg.append(\"rect\").attr({class: \"grid frame inner\"});\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yAxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.gridGroup = this.svg.append(\"g\").attr({class: \"grid-group\"});\n    this.regression = this.svg.append(\"line\");\n    this.dataGroup = this.svg.append(\"g\").attr({class: \"data-group\"});\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.popup = plotd3.html.tooltip(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(d.name || \"-\");\n      popup.select(\".value\").text(parseInt(100 * d.radius)/100 + \" \"+ (that.config.unit || \"\"));\n    });\n    this.overlap = plotd3.rwd.overlap();\n  },\n  parse: function() {\n    if(this.dimension.radius.fields.length == 0) this.data.map(function(d,i) { d.radius = 1; });\n    this.xRange = d3.extent(this.data.map(function(it) { return it.x; }));\n    this.yRange = d3.extent(this.data.map(function(it) { return it.y; }));\n    this.rRange = d3.extent(this.data.map(function(it) { return it.radius; }));\n    this.colorRange = d3.extent(this.data.map(function(it) { return it.color; }));\n    if(this.colorRange[0] == this.colorRange[1]) this.colorRange[1] = this.colorRange[0] + 1;\n    this.colors = d3.map(this.data, function(d) {return d.color || \"\"; }).keys();\n    if(this.xRange[0] == this.xRange[1]) this.xRange[1]++;\n    if(this.yRange[0] == this.yRange[1]) this.yRange[1]++;\n    if(this.rRange[0] == this.rRange[1]) this.rRange[1]++;\n  },\n  bind: function() {\n    var that = this,sel;\n    sel = this.dataGroup.selectAll(\"circle.data\").data(this.data);\n    sel.exit().transition(\"exit\").duration(500).attr(\"opacity\", 0).remove();\n    sel = sel.enter().append(\"circle\").attr({class:\"data\"});\n    if(this.config.popupShow) this.popup.nodes(sel);\n\n    sel = this.dataGroup.selectAll(\"text.data.label\").data(this.data);\n    sel.exit().transition(\"exit\").duration(500).attr(\"opacity\", 0).remove();\n    sel = sel.enter().append(\"text\").attr({class:\"data label\"});\n    if(this.config.popupShow) this.popup.nodes(sel);\n    sel = this.gridGroup.selectAll(\"line.grid.vertical\").data(this.xticks);\n    sel.exit().remove();\n    sel.enter().append(\"line\").attr({class: \"grid vertical\"});\n    sel = this.gridGroup.selectAll(\"line.grid.horizontal\").data(this.yticks);\n    sel.exit().remove();\n    sel.enter().append(\"line\").attr({class: \"grid horizontal\"});\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect( );\n    var svgbox = d3.select(this.root).select(\"svg\")[0][0].getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    var m = this.config.margin;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.maxRadius = this.config.bubbleSizeMax/2;\n    if(this.maxRadius > this.width / 30) this.maxRadius = this.width / 30;\n    if(this.maxRadius > this.height / 15) this.maxRadius = this.height / 15;\n    this.popup.fontSize(this.config.fontSize);\n    this.cScale = plotdb.Palette.scale.auto(\n      this.config.palette,\n      this.dimension.color.fields\n    );\n    this.legend = plotd3.rwd.legend().orient(\"right\")\n      .scale(this.cScale)\n      .label(this.config.legendLabel || \"\")\n      .tickValues(this.cScale.domain().length ? this.cScale.domain() : this.colors)\n      .size([this.width/2,this.height - 2 * this.config.margin - this.xAxisHeight])\n      .fontSize(this.config.fontSize);\n    this.legendGroup.call(this.legend);\n    this.legendGroup.selectAll(\".legend\").on(\"mouseover\", function(d,i) {\n      that.activeGroup = d; that.render();\n    }).on(\"mouseout\", function(d,i) {\n      that.activeGroup = null; that.render();\n    });\n    this.legendSize = (this.config.legendShow ? this.legend.offset() : [0,0]);\n    this.rScale = d3.scale.sqrt().domain([0,this.rRange[1]]).range([0, this.maxRadius]);\n    this.yScale = d3.scale.linear().domain(this.yRange).range([\n      height - this.maxRadius - m, this.maxRadius + m\n    ]);\n    this.yAxis = plotd3.rwd.axis().scale(this.yScale).orient(\"left\")\n      .fontSize(this.config.fontSize)\n      .label(this.config.yAxisLabel || \"\")\n      .labelPosition(this.config.yAxisLabelPosition)\n      .ticks(this.config.yAxisTickCount)\n      .tickSize(this.config.yAxisTickSizeInner, this.config.yAxisTickSizeOuter)\n      .handleOverlap(this.config.yAxisHandleOverlap)\n      .tickPadding(this.config.yAxisTickPadding);\n    this.yAxisGroup.call(this.yAxis).select(\".domain\").remove();\n    this.yAxisWidth = (this.config.yAxisShow ? this.yAxis.offset() : 0);\n    this.yticks = this.yAxis.tickValues();\n    this.xScale = d3.scale.linear().domain(this.xRange).range([\n      this.yAxisWidth + this.maxRadius + m,\n      width - this.maxRadius - m - (this.config.legendShow ? this.legendSize[0] + this.config.fontSize : 0)\n    ]);\n    this.xAxis = plotd3.rwd.axis()\n      .scale(this.xScale)\n      .orient(\"bottom\")\n      .fontSize(this.config.fontSize)\n      .label(this.config.xAxisLabel || \"\")\n      .labelPosition(this.config.xAxisLabelPosition)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .tickPadding(this.config.xAxisTickPadding)\n      .tickDirection(this.config.xAxisTickDirection)\n      .handleOverlap(this.config.xAxisHandleOverlap)\n      .ticks(this.config.xAxisTickCount);\n    this.xAxisGroup.call(this.xAxis).select(\".domain\").remove();\n    this.xAxisHeight = (this.config.xAxisShow ? this.xAxis.offset() : 0);\n    this.xticks = this.xAxis.tickValues();\n    this.yScale.range([ height - this.maxRadius - this.xAxisHeight - m, this.maxRadius + m ]);\n    this.yAxisGroup.call(this.yAxis).select(\".domain\").remove();\n  },\n  corr: function(data) {\n    var x = data.map(function(d,i) { return d.x; });\n    var y = data.map(function(d,i) { return d.y; });\n    var i, sum1 = 0, sum2 = 0, si = [], sum1Sq = 0, sum2Sq = 0, pSum = 0, num, den, n = x.length;\n    if(!this.dimension.x.fields.length || !this.dimension.y.fields.length) return 0;\n    for (i = 0; i < n; i++) sum1 += x[i];\n    for (i = 0; i < n; i++) sum2 += y[i];\n    for (i = 0; i < n; i++) sum1Sq += Math.pow(x[i], 2);\n    for (i = 0; i < n; i++) sum2Sq += Math.pow(y[i], 2);\n    for (i = 0; i < n; i++) pSum += x[i] * y[i];\n    num = pSum - (sum1 * sum2 / n);\n    den = sum1Sq - Math.pow(sum1, 2)/n;\n    if (den == 0) return [0,0];\n    return [\n      (sum2 * sum1Sq / n - sum1 * pSum / n) / den,\n      num / den\n    ];\n  },\n  render: function() {\n    var that = this;\n    var m = this.config.margin;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.frame.attr({\n      x: that.yAxisWidth + m,\n      y: m,\n      width: that.width - 2 * m - that.yAxisWidth - this.legendSize[0] - this.config.padding,\n      height: that.height - 2 * m - that.xAxisHeight,\n      fill: this.config.gridBackground,\n      stroke: this.config.gridFrameStroke,\n      \"stroke-width\": this.config.gridFrameStrokeWidth\n    });\n    this.frameInner.attr({\n      x: that.yAxisWidth + m + this.maxRadius,\n      y: m + this.maxRadius,\n      width: that.width - 2 * m - that.yAxisWidth - this.legendSize[0] - this.config.padding - 2 * this.maxRadius,\n      height: that.height - 2 * m - that.xAxisHeight - 2 * this.maxRadius,\n      fill: this.config.gridBackground,\n      stroke: this.config.gridFrameStroke,\n      \"stroke-width\": this.config.gridFrameStrokeWidth\n    });\n    this.legendGroup.attr({\n      transform: [\"translate(\", this.width - this.config.margin - this.legendSize[0], (this.height - this.legendSize[1] - this.xAxisHeight)/2, \")\"].join(\" \"),\n      display: this.config.legendShow ? \"block\" : \"none\"\n    });\n    this.xAxisGroup.attr({\n      transform: [\"translate(\", 0, \",\", this.height - this.xAxisHeight - m,\")\"].join(\"\"),\n      display: this.config.xAxisShow ? \"block\" : \"none\"\n    });\n    this.yAxisGroup.attr({\n      transform: [\"translate(\", this.yAxisWidth + m , \",\", 0 ,\")\"].join(\"\"),\n      display: this.config.yAxisShow ? \"block\" : \"none\"\n    });\n    this.yAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.yAxisStroke });\n    this.xAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.xAxisStroke });\n    this.svg.selectAll(\"circle.data\").filter(function(d,i) { return !d3.select(this).attr(\"fill\"); }).attr({\n      fill: function(it) { return that.cScale(it.color); },\n      stroke: that.config.bubbleStroke, \n      opacity: 0\n    });\n    this.svg.selectAll(\"circle.data\").transition(\"morph\").duration(500).attr({\n      fill: function(it) { return that.cScale(it.color); },\n      cx: function(it) { return that.xScale(it.x); },\n      cy: function(it) { return that.yScale(it.y); },\n      r: function(it) { return that.rScale(it.radius); },\n      \"stroke-width\": that.config.bubbleStrokeWidth\n    });\n    this.svg.selectAll(\"circle.data\").transition().duration(500).attr({\n      opacity: function(d,i) {\n        return (that.activeGroup == null || that.activeGroup == d.color ? that.config.bubbleFillOpacity : 0.1);\n      }\n    });\n    var textLabels = this.dataGroup.selectAll(\"text.label.data\");\n    textLabels.text(function(d,i) { return d.name; }).attr({\n      display: (this.config.labelShow ? \"block\" : \"none\")\n    }).transition(\"morph\").duration(function(d,i) {\n      return d3.select(this).attr(\"x\") ? 500 : 0;\n    }).attr({\n      fill: this.config.fontSize,\n      x: function(it) { return that.xScale(it.x); },\n      y: function(it) { return that.yScale(it.y) + that.rScale(it.radius); },\n      dy: \"1em\",\n      \"text-anchor\": \"middle\",\n      \"stroke-width\": that.config.bubbleStrokeWidth\n    });\n    function textOverlap(delay) {\n      if(!that.config.labelShowOverflow)\n        that.overlap.nodes(textLabels, function(d,i) { return d.radius; });\n      textLabels.transition().duration(delay).attr({\n        opacity: function(d,i) {\n          return (\n            (that.activeGroup == null || that.activeGroup == d.color) &&\n            (!d.overlap || that.config.labelShowOverflow) ? 0.9 : 0.1);\n        }\n      });\n    }\n    textOverlap(500);\n    if(!this.config.labelShowOverflow) setTimeout(function() { textOverlap(0); }, 100);\n\n    this.gridGroup.selectAll(\"line\").attr({\n      stroke: this.config.gridStroke,\n      \"stroke-dasharray\": this.config.gridDashArray,\n      \"stroke-width\": this.config.gridStrokeWidth,\n      display: (this.config.gridShow ? \"block\" : \"none\")\n    });\n    this.gridGroup.selectAll(\"line.grid.vertical\").attr({\n      x1: function(it) { return that.xScale(it); },\n      x2: function(it) { return that.xScale(it); },\n      y1: that.yScale(that.yRange[0]),\n      y2: that.yScale(that.yRange[1])\n    });\n    this.gridGroup.selectAll(\"line.grid.horizontal\").attr({\n      y1: function(it) { return that.yScale(it); },\n      y2: function(it) { return that.yScale(it); },\n      x1: that.xScale(that.xRange[0]),\n      x2: that.xScale(that.xRange[1])\n    });\n    var corr = this.corr(this.data.filter(function(d,i) {\n      return (that.activeGroup == d.color || that.activeGroup == null ? true : false);\n    }));\n    var x1,y1,x2,y2;\n    x1 = this.xScale.domain()[0];\n    x2 = this.xScale.domain()[1];\n    y1 = corr[0] + corr[1] * x1;\n    y2 = corr[0] + corr[1] * x2;\n    if(y1 < this.yScale.domain()[0]) {\n      y1 = this.yScale.domain()[0];\n      x1 = ( y1 - corr[0] ) / corr[1];\n    }\n    if(y2 > this.yScale.domain()[1]) {\n      y2 = this.yScale.domain()[1];\n      x2 = ( y2 - corr[0] ) / corr[1];\n    }\n    x1 = this.xScale(x1);\n    x2 = this.xScale(x2);\n    y1 = this.yScale(y1);\n    y2 = this.yScale(y2);\n    this.regression.transition(\"morph\").duration(500).attr({\n      x1: x1, y1: y1, x2: x2, y2: y2, stroke: this.config.lineStroke,\n      \"stroke-width\": this.config.lineStrokeWidth,\n      \"stroke-dasharray\": this.config.lineDashArray\n    });\n  }\n}"},"assets":[],"dimension":{"radius":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"radius of circle","fields":[{"data":["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],"datatype":"Number","name":"Radius","bind":"radius","key":0,"dataset":0}],"fieldName":["Radius"]},"x":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"x axis of circle","fields":[{"data":["0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.2","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.3","0.4","0.4","0.5","0.5","0.5","0.5","0.5","0.5","0.5"],"datatype":"Number","name":"X","bind":"x","key":0,"dataset":0}],"fieldName":["X"]},"y":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"y axis of circle","fields":[{"data":["0.1","0.15","0.2","0.25","0.3","0.35","0.4","0.45","0.5","0.55","0.6","0.65","0.7","0.75","0.8","0.1","0.15","0.2","0.25","0.3","0.35","0.4","0.45","0.5","0.55","0.6","0.65","0.7","0.75","0.8","0.85","0.9","0.95","0.1","0.15","0.1","0.15","0.2","0.25","0.3","0.35","0.4"],"datatype":"Number","name":"Y","bind":"y","key":0,"dataset":0}],"fieldName":["Y"]},"color":{"type":[],"require":false,"desc":"color of circle","fields":[{"data":["环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","环境变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","身体变化","怀孕状态","怀孕状态","不明原因","不明原因","不明原因","不明原因","不明原因","不明原因","不明原因"],"datatype":"String","name":"Color","bind":"color","key":0,"dataset":0}],"fieldName":["Color"]},"name":{"type":[],"require":false,"desc":"name of circle","fields":[{"data":["汶川地震那段日子是始发期，我在医院连续五天输液治鼻炎，边听有关地震广播边抹眼泪","自从来到魔都（北京），就悲剧了","18岁去东北上大学","去长春上大学之后！艾蒿过敏！","过敏鼻炎是由一只毛绒熊娃娃引起的，大概是我22岁的时候","北京待了半年就不行了，不幸的赶上雾霾最严重的那年","21左右，自从开始养猫","38岁去年9月从新疆回来得的","自从来到北京后，就杯具了","上大学之后，现在八月中旬正进入了严重的时期","有一次去一个空气不好城市，当时去和别人谈合作，到了那里之后，鼻子就觉得不舒服","我是一枚出生于东北的妹子，自小就没有多少事情是我害怕的，直到，在花粉症盛行的澳洲被鼻炎这个顽疾盯上","我最初发病大概是四年前，对冷空气过敏","我中学时鼻炎，大学最严重，在美国留学时鼻子自己好了","大约五年前，在澳洲留学的我，突然患上过敏性鼻炎","我是2007年会计证考试开始的。好难受啊，越来越严重了","40得鼻炎。貌似是有一晚酒后，吹了一晚空调后第二天就不对了","高中毕业打工吹空调吹出鼻炎来了！","4岁，海里游泳完了感冒,之后就开始喷嚏！","13年开始，加班熬夜，身体素质下降就开始有了~","喝了什么中药得的过敏性鼻炎","我是怀儿子那年单位空调太脏 温度开的死低把我弄感冒了，然后生完孩子一换季就要感冒搞很久才好，一直以为是抵抗力低然后各种补，后来才知道是的了过敏性鼻炎","12岁，小升初得了次很严重的感冒，那是我第一次因为生病请假，病好后一直流鼻涕，以为感冒没好，再去医院就说是鼻炎了","24岁，那段时间工作一直加班，体质变差，然后得了一次感冒，当时没重视，就想不吃药熬过去，结果感冒非常严重，造就了后来的过敏性鼻炎","25岁，就是去年，连吃一周的日本料理+感冒","初一13岁吧，记得冬天的时候，每天在冷风中步行上学，回到学校一直打喷嚏流鼻涕，感冒一直不好，然后就鼻炎了","我7-10岁左右有鼻炎，就是流清水鼻涕，小时候经常感冒打针。30岁时鼻炎再次发作。家里人说是小时候感冒没治疗彻底留下的后遗症","青年。源于一次感冒。拖着没治。就成鼻炎了","26岁犯病的，我觉得我是因为整天上班一个多小时地铁，太冷造成的","高二的时候，感冒引发的","十多岁，读高中，应该算青春期吧","小时候体质不太好，容易感冒，纯属后天作出来的鼻炎","我大概四五年前得的过敏性鼻炎，先开始也是各种吃药，喷剂，但是都是治标不治本。然后有个医生跟我说过敏性鼻炎，最根本是抵抗力太弱了","30-40，去年，怀孕，得了，一直以为感冒。今年又犯了，看医生才知是过敏鼻炎","我是生了孩子以后开始的。那年28岁","没有遗传，高二大概18岁的时候犯上的","14岁，初二，当时大概十一月份，有一天晚上突然连续不断打了几十个喷嚏觉得好奇怪，后来去医院确诊了过敏性鼻炎，距今快十年了","35+，活了大半辈子了，突然不知道对什么东西过敏了","初中开始的，最近放暑假回家了。不知道什么过敏了","前两年莫名得了过敏性鼻炎，反反复复。想打喷嚏又打不出来，好不容易打出一个喷嚏，爽了一秒钟，下一秒又堵上了","一天至少打10个喷嚏，早上起床一个个喷嚏不断，闻到刺激性气味也是喷嚏不停，还动不动鼻塞、流鼻涕，去医院一查，原来是得了过敏性鼻炎","我今年20多岁，前两年莫名其妙患上了过敏性鼻炎，就一直反反复复的"],"datatype":"String","name":"Name","bind":"name","key":0,"dataset":0}],"fieldName":["Name"]}},"config":{"unit":{"desc":"Unit of value","name":"Unit","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"Value"},"margin":{"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":10,"default":10,"category":"Global Settings"},"padding":{"name":"Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":10,"default":10,"category":"Global Settings"},"palette":{"name":"Palette","type":[{"re":{},"name":"Palette","level":30,"scale":{},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"subtype":{"binary":"binary","diverging":"diverging","sequential":"sequential","qualitative":"qualitative"},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]}}],"value":{"key":"cfa","name":"Code for Africa","_type":{"name":"palette","location":"sample"},"colors":[{"hex":"#0052d4","$$hashKey":"object:327"},{"hex":"#6fb1fc","$$hashKey":"object:323"},{"hex":"#ee9ca7","idx":1,"$$hashKey":"object:192"},{"hex":"#9796f0","idx":3,"$$hashKey":"object:194"}]},"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings"},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"12","default":13,"category":"Global Settings"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Grid"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"labelShow":{"name":"Show Data Label","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":false,"default":false,"category":"Label"},"popupShow":{"desc":"show Popup when user hovers over elements","name":"show Popup","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Popup","rebindOnChange":true},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Y Axis"},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Arial","default":"Arial","category":"Global Settings"},"gridStroke":{"name":"Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#cccccc","default":"#ccc","category":"Grid"},"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Legend"},"lineStroke":{"name":"Line Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#4e4e4e","default":"#999","category":"Line"},"xAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"X Axis"},"yAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"Y Axis"},"legendLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","category":"Legend"},"xAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"X Axis"},"yAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"Y Axis"},"bubbleStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#919191","default":"#c01d1d","category":"Bubble"},"bubbleSizeMax":{"name":"Max Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"15","default":20,"category":"Bubble"},"gridDashArray":{"desc":"SVG style dash array. '2 4' means 2px line and 4px space.","name":"Dash Style","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"2 4","default":"2 4","category":"Grid"},"lineDashArray":{"name":"Line Dash Array","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"4 4","default":"1 1","category":"Line"},"gridBackground":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"rgba(255,255,255,0)","category":"Grid"},"xAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":6,"default":6,"category":"X Axis"},"yAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"0","default":6,"category":"Y Axis"},"gridFrameStroke":{"name":"Frame Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#e4e4e4","default":"#ccc","category":"Grid"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"1","default":1,"category":"Grid"},"lineStrokeWidth":{"name":"Line Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"1","default":1,"category":"Line"},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"4","default":4,"category":"Y Axis"},"bubbleFillOpacity":{"name":"Fill Opacity","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"0.9","default":0.5,"category":"Bubble"},"bubbleStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"0","default":"1","category":"Bubble"},"labelShowOverflow":{"desc":"Show all label, even if they are too long.","name":"Show Overflow Label","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":false,"default":false,"category":"Label"},"xAxisHandleOverlap":{"desc":"How should overlapped ticks be taken care?","name":"Overlap Ticks","type":[{"name":"Choice","level":20,"values":["none","hidden","offset"],"default":""}],"value":"hidden","default":"hidden","category":"X Axis"},"xAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"X Axis"},"xAxisTickDirection":{"name":"Tick Direction","type":[{"name":"Choice","level":20,"values":["vertical","horizontal"],"default":""}],"value":"horizontal","default":"horizontal","category":"X Axis"},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"},"yAxisHandleOverlap":{"desc":"How should overlapped ticks be taken care?","name":"Overlap Ticks","type":[{"name":"Choice","level":20,"values":["none","hidden"],"default":""}],"value":"none","default":"hidden","category":"Y Axis"},"yAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"Y Axis"},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"4","default":4,"category":"Y Axis"},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"Y Axis"},"gridFrameStrokeWidth":{"name":"Frame Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"2","default":3,"category":"Grid"}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"local":null,"inherit":[],"metashow":null,"footer":null}